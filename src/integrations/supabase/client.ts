// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL as string;
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY as string;

// Log the environment variables but mask the key for security
console.log('VITE_SUPABASE_URL:', SUPABASE_URL || 'Not defined');
console.log('VITE_SUPABASE_ANON_KEY:', SUPABASE_PUBLISHABLE_KEY ? `${SUPABASE_PUBLISHABLE_KEY.slice(0,8)}â€¦` : 'Not defined');

// Check for missing environment variables but don't throw
if (!SUPABASE_URL || !SUPABASE_PUBLISHABLE_KEY) {
  console.error('Supabase URL or Key not defined. Make sure VITE_SUPABASE_URL and VITE_SUPABASE_ANON_KEY are set in your .env file.');
  // Set fallback values instead of throwing
  // This will allow the app to load, but Supabase operations will fail gracefully
}

// Create the client with fallbacks for missing values
export const supabase = createClient<Database>(
  SUPABASE_URL || 'https://example.com', // Fallback URL that will cause operations to fail gracefully
  SUPABASE_PUBLISHABLE_KEY || 'public-fallback-key-for-graceful-failure'
);

// Add an error handler for Supabase operations
supabase.auth.onAuthStateChange((event, session) => {
  // Log authentication events
  console.log('Supabase auth event:', event);
});